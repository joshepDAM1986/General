
crear el array
private ArrayList...
public Cine...

------------------------------------------
METODOS:
------------------------------------------
cargar texto fr br

variables
limpiar lista
proceso lectura
while ((linea=br.readLine())!=null) (Apuntes)
partes.split":"
posiciones
añadirObjeto completo
cerrar procesos
------------------------------------------
guardar texto fw pw

proceso de escritura
recorrer lista
pw.println(p.gets+":"+)
cerrar procesos
------------------------------------------
guardar binario fos oos

inicializar proceso escritura en bucle
recorrer lista
oos.writeObject(p) (Apuntes)
cerrar procesos
------------------------------------------
cargar binario fis ois

limpiar lista
proceso lectura
objeto p
while (fis.available() > 0) (Apuntes)
p =(Objeto)ois.readObjet() (Apuntes)
añadir a la lista.add(p)
cerrar procesos 
------------------------------------------
visualizar pelicula

var resultado=""
si la lista.empty()
resultado = "No existe la pelicula"
si no 
recorrer lista
resultado += toString
retornar resultado
------------------------------------------
bucar pelicula
var resultado null
recorrer lista
si p.getNombre()equals...(nombre)
resultado = p.toString.
break
retornar resultado
------------------------------------------
añadir pelicula

var buscado= buscar(nombre)
si buscado==null
crear instancia de pelicula nueva completa
añadirla a la lista.add(nueva)
si se encuentra "Ya existe la pelicula"
------------------------------------------
dinero superheroes

var total=0
recorremos lista
si el genero es superheroes y si su duración es superior a los 100 min
total += p.getRecaudacion
retornar total
------------------------------------------
exportar nejores

proceso escritura 
abrir xml
recorrer la lista
si la recaudacion supera los 200
escribe la info de la peli en xml
cerrar procesos escritura
------------------------------------------
TESTS:
------------------------------------------
test guardar/cargar texto y binario

valor esperado=dao.visualizado
dao.cargar(rutas)
dao.guardar(rutas)
valor actual=dao.visualizado
assert
------------------------------------------
test buscarExiste

valor esperado
actual=dao.buscada(nombre)
assert
------------------------------------------
test buscarNoExiste

valor esperado null
actual dao.buscada(nombre fake)
assert
------------------------------------------
dinero superheroes

valor suma=dao.super()
assert suma,$
------------------------------------------
test exportarmejores

dao.mejores(rutaxml)
------------------------------------------

